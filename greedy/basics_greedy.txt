Greedy Algorithm : (This is not an algorithm, it is a technique.) :

Introduction: https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/tutorial/

In an algorithm design there is no one 'silver bullet' that is a cure for
all computation problems. Different problems require the use of different
kinds of techniques. A good programmer uses all these techniques based on
the type of problem. Some commonly-used techniques are:

    Divide and conquer
    Randomized algorithms
    Greedy algorithms (This is not an algorithm, it is a technique.)
    Dynamic programming

What is a 'Greedy algorithm'?

A greedy algorithm, as the name suggests, always makes the choice that seems
to be the best at that moment. This means that it makes a locally-optimal
choice in the hope that this choice will lead to a globally-optimal solution.

How do you decide which choice is optimal?

Assume that you have an objective function that needs to be optimized
(either maximized or minimized) at a given point. A Greedy algorithm makes
greedy choices at each step to ensure that the objective function is optimized.
The Greedy algorithm has only one shot to compute the optimal solution
so that it never goes back and reverses the decision.

Greedy algorithms have some advantages and disadvantages:

*   It is quite easy to come up with a greedy algorithm (or even multiple
     greedy algorithms) for a problem.
*   Analyzing the run time for greedy algorithms will generally be much
     easier than for other techniques (like Divide and conquer). For the
*   Divide and conquer technique, it is not clear whether the technique
     is fast or slow. This is because at each level of recursion the size
     of gets smaller and the number of sub-problems increases.
*   The difficult part is that for greedy algorithms you have to work much
     harder to understand correctness issues. Even with the correct algorithm,
     it is hard to prove why it is correct. Proving that a greedy algorithm
     is correct is more of an art than a science. It involves a lot of creativity.

Ref:
https://en.wikipedia.org/wiki/Greedy_algorithm
https://medium.com/algorithms-and-leetcode/greedy-algorithm-explained-using-leetcode-problems-80d6fee071c4
https://yunrui-li.medium.com/leetcode-greedy-algor-1c9fc0097689
https://leetcode.com/discuss/general-discussion/669996/greedy-for-beginners-problems-sample-solutions
https://leetcode.com/discuss/general-discussion/1061059/ABCs-of-Greedy
